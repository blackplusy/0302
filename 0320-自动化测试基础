1.selenium家族
	selenium 1.0 (rc) (过去式)
	selenium IDE (集成开发环境,chrome,firefox)
	selenium webdriver
	selenium grid(分布式自动化测试工具，可以在多个环境中并发形式执行，缩短脚本运行时间)
2.webdriver驱动原理
	过程:执行脚本，webdriver会启动一个新的线程去启动一个浏览器，浏览器可以理解为服务器，脚本为客户端，通过脚本操作浏览器，脚本发送一个请求给浏览器，浏览器处理后返回给脚本
	webdriver的3个角色
		1.自动化测试代码
		2.浏览器的驱动
		3.浏览器
3.css定位
	定位输入框
	a.单一属性定位
		a1.标签选择器
			find_element_by_css_selector("input")
			input就是标签的名字
		a2.id定位
			find_element_by_css_selector("#kw")
			#在css中代表的是选择id
			kw是标签中id对应的值
		a3.class定位
			find_element_by_css_selector(".s_ipt")
			.在css中代表的是选择类
			s_ipt是标签中class对应的值
		a4.其他属性定位
			find_element_by_css_selector("[name='wd']")
			标签中满足name是wd的对应标签
			find_element_by_css_selector("[autocomplete='off']")
			满足autocomplete属性值是off的标签
	b.组合属性定位
		b1.id组合属性定位
			find_element_by_css_selector("input#kw")
		b2.class组合属性定位
			find_element_by_css_selector("input.s_ipt")
		b3.其他属性组合定位
			find_element_by_css_selector("input[name='wd']")
		b4.只有属性名，没有值
			find_element_by_css_selector("input[maxlength]")
		b5.两个其他属性组合定位
			find_element_by_css_selector("[name='wd'][autocomplete='off']")
		b6.模糊匹配属性定位
			匹配属性值为字符串开头的方法
			find_element_by_css_selector("input[class^='bg']")
			匹配属性为字符串结尾的方法
			find_element_by_css_selector("input[class$='bg']")
			^代表以...开头
			$代表以...结尾
4.xpath定位
	xpath定位：https://www.w3school.com.cn/xpath/index.asp
	针对于xml的路径语言，通过元素的路径来找到这个元素
	a.工具
		火狐：firebug
		F12
	b.用法
		/ 	 绝对路径，从根节点选取元素
		//	 相对路径，所有子结点中搜索对应元素
		@    选取属性
		.    当前节点
		..   当前节点的父节点
		注意:通过浏览器的F12的console可以进行调试$x()
		b1.xpath支持id、class、name定位
			//*[@id='kw']
			//*[@name='wd']
			//*[@class='s_ipt']
		b2.如果没有id、class、name属性，xpath指定属性定位
			//*[@autocomplete='off']
		b3.通过层级元素定位
			1>通过相对路径定位元素
				//a[@class='mnav'][1]
			2>通过绝对路径定位元素
				/html/body/div[1]/div[1]
		b4.xpath运算符
			and 同时满足条件
			or  满足一个条件即可
			//a[@class='mnav' and @name='tj_trnews']
5.框架切换
	a.切换到frame中(switch_to.frame(参数))
		参数可以用来定位frame，传入id，name等
		from xxx import xxx
		br=webxxxxx
		br.switch_to.frame(frame1)
	b.从frame切换到主文档(switch_to.default_content())
		切换到frame中，不能继续操作主文档中的元素，如果想进行操作，需要切回到原来文档
		from xxx import xxx
		br=webxxxxx
		br.switch_to.default_content()
	c.嵌套frame的操作
		开发时候会出现嵌套的frame
			从主文档切换到frame2，一层一层进入
			br.switch_to.frame("frame1")
			br.switch_to.frame("frame2")
			子frame切回父frame
			相当于后退方法，随意切换
			br.switch_to.parent_frame() 
			如果当前已经是主文档，无效
6.selenium ide
	a.安装selenium ide插件
	

