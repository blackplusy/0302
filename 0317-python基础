1.字符串的操作
	a.字符串的应用场景
		1>用户名、密码、邮箱
		2>电话号码升级
			0452-8869504
			0452-68869504
		3>爬虫网站域名
			www.baidu.com---baidu
			www.acfun.com---acfun
		4>分词
			hello ， im your baba！
			你知不知道我知道你知道我不知道你知道‘
		5>密码破解
	b.字符串的索引
		索引:下标，从0开始，可以从左到右也可以从右到左
		字符串可以通过string[x],x作为索引进行字符串的截取
		b   a   i   d   u
		0   1   2   3   4
		-5 -4  -3  -2  -1 

		string index out of range 索引超出范围
	c.字符串的切片
		切片:通过索引截取所需要信息,string[x,y],截取的信息是x,y-1[左闭右开,前闭后开]
	d.其他操作
		1>字符串的拼接
		2>遍历
		3>去空格
		4>计算长度(元素个数)
	e.补充
		1>index和find
			find:检测字符串是否包含在字符串序列中，返回开始的索引值(目标第一次出现的索引)，否则返回-1
			index:类似于find，找不到目标会报错
			区别:
				find只能应用在字符串中
				index所有序列容器都可以(元组、列表、字典)
		2>isalpha()和isdigit()
			isalpha() 检查字符串是否只由字母组成
			isdigit() 检查字符串是否只由数字组成
		3>upper()和lower()
			upper()字符串中字母转换为大写字母
			lower()字符串中字母转换为小写字母
		4>startswith()和endswith()
			startswith()  检查字符串是否以指定字符串开头
			endswith()    检查字符串是否以指定字符结尾
		5>count、replace、split
			count 	返回序列中包含元素的个数
			replace 替换字符串
			split   按照某种条件把字符串拆成列表
	f.引号
		单引号
		双引号
		三引号
		常见情况下单引号和双引号没区别，特殊情况下单引号包双引号或者双引号包单引号
		转义符\
		三引号通常用于注释和多行打印

	1.提示用户输入内容，如果为空提示您的输入为空
	2.判断用户输入字符串首字母是否为元音(AEIOU)
	3.如果为元音，在字符串后加ay
		apple---->appleay
	4.如果为辅音，将字符串首字母移动到结尾并且增加ay
		hello---->ellohay
2.列表操作
	a.序列
		序列是python中最基本的数据结构
		序列中每个元素分配一个数字标识他们的位置，也就是索引
		列表和元组使用最多
		序列都可以索引、切片、拼接
	b.列表应用场景
		1>taobao中商品加入购物车
		2>自动化投简历屏蔽某些公司
		3>爬虫页面筛选信息
	c.列表的定义
		列表是python中常见的数据类型，中括号中分开元素，元素可以使用不同类型的数据
		l=[1,2,3]
		l=[1,'o8ma',2,'ladeng']
		l=[1,2,[3,4]]
	d.列表的访问
		直接访问
		遍历访问
		成员访问
	e.列表的索引和切片
		索引可以理解为下标，左侧从0开始，右侧从-1开始
		list index out of range
	f.列表的拼接
		两个列表进行组合
	g.列表的更新
		列表的修改，通过索引指定进行修改
	h.列表的删除
		del可以删除指定元素，也可以删除整个列表
	i.栈的方式访问列表
		队列：先进先出，后进后出
		栈：  后进先出，先进后出
			append()  追加
			pop()     弹出
	j.获取列表的索引
		index() 	元素在列表中第一次出现的索引
		enumerate()  枚举(索引和值同时取出来)
	k.排序
		reverse()   反向打印
		sort()      排序
	l.补充
		insert()  通过索引和值进行新增
		extend()  扩展(元素、列表)

写一段小程序,需求:
定义一个很长字符串，例如str='123456789abcdefghijklmn'
把该字符串按照反向顺序打印出来。
a.利用reverse方法
b.不利用reverse方法
3.字典
	a.字典的应用场景
		1>前后端数据传输
		2>浏览器提交数据给服务器
		3>接口开发
	b.创建字典
		字典是python中的映射数据类型
		由键值对组成  'name':'gaga'
		一般是字符串或者数字作为键
		dic={'name':'gaga','age':18}
		dic={'age':100}
	c.访问字典
		直接访问
		数据筛选
	d.删除字典
		1.del
		删除指定元素(键值对)
		删除整个字典(不能访问)
		2.clear
		清空字典
	e.修改字典

	f.补充
		1.keys    键
		2.values  值
		3.items   键值对
		
